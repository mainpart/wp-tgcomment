<?php

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏—Ö –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ WordPress
 * 
 * –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
 * - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * - –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram –≤ WordPress
 * - –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ WordPress –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø (albums) —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
 * - –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ
 */
class WP_TGComment_Processor {

	/**
	 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
	 * 
	 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è cron –∑–∞–¥–∞—á–∏. –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏
	 * –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Ö –ø–∞–∫–µ—Ç–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è
	 * –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
	 * 
	 * @return void
	 */
	public static function process_messages_to_comments() {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
		$lock_key = 'wp_tgcomment_processor_lock';
		if ( get_transient( $lock_key ) ) {
			error_log( 'WP TGComment Processor: –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º' );

			return;
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –Ω–∞ 2 –º–∏–Ω—É—Ç—ã
		set_transient( $lock_key, time(), 120 );

		try {
			// –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
			$messages = self::get_messages_for_processing();

			if ( empty( $messages ) ) {
				delete_transient( $lock_key );

				return;
			}

			error_log( 'WP TGComment Processor: –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É ' . count( $messages ) . ' —Å–æ–æ–±—â–µ–Ω–∏–π' );

			foreach ( $messages as $message ) {
				self::process_single_message( $message );
			}

		} catch ( Exception $e ) {
			error_log( 'WP TGComment Processor: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ' . $e->getMessage() );
		} finally {
			// –°–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
			delete_transient( $lock_key );
		}
	}

	/**
	 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	 * 
	 * –í—ã–±–∏—Ä–∞–µ—Ç –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫
	 * –∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç –∏—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –°–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–ø—ã—Ç–∫–∏.
	 * 
	 * @return array –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–º–∞–∫—Å–∏–º—É–º PROCESSING_BATCH_SIZE)
	 */
	public static function get_messages_for_processing() {
		global $wpdb;

		$table_name  = $wpdb->prefix . WP_TGComment_Handler::TABLE_INCOMING;
		$batch_size  = WP_TGComment_Handler::PROCESSING_BATCH_SIZE;
		$max_retries = WP_TGComment_Handler::MAX_RETRY_ATTEMPTS;

		// –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫ –∏ –∏—Å–∫–ª—é—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ
		$sql = $wpdb->prepare(
			"SELECT * FROM {$table_name}
			WHERE wp_user_id > 0
			AND post_id > 0
			AND retry_count < %d
			AND is_deleted = 0
			ORDER BY COALESCE(last_processing_attempt, '1970-01-01 00:00:00') ASC, created_at ASC
			LIMIT %d",
			$max_retries,
			$batch_size
		);

		$messages = $wpdb->get_results( $sql, ARRAY_A );

		// –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
		if ( ! empty( $messages ) ) {
			$message_ids  = array_column( $messages, 'id' );
			$placeholders = implode( ',', array_fill( 0, count( $message_ids ), '%d' ) );

			$wpdb->query( $wpdb->prepare(
				"UPDATE {$table_name}
				SET last_processing_attempt = NOW()
				WHERE id IN ({$placeholders})",
				...$message_ids
			) );

			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
			foreach ( $message_ids as $message_id ) {
				set_transient( "wp_tgcomment_message_lock_{$message_id}", time(), 300 ); // 5 –º–∏–Ω—É—Ç
			}
		}

		return $messages;
	}

	/**
	 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏
	 * 
	 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π WordPress,
	 * –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
	 * 
	 * @param array $message –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã incoming
	 * @return bool true –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ, false –ø—Ä–∏ –æ—à–∏–±–∫–µ
	 */
	public static function process_single_message( $message ) {
		$message_id = $message['id'];
		$lock_key   = "wp_tgcomment_message_lock_{$message_id}";

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
		if ( ! get_transient( $lock_key ) ) {
			error_log( "WP TGComment Processor: –°–æ–æ–±—â–µ–Ω–∏–µ {$message_id} –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º" );

			return false;
		}

		error_log( "WP TGComment Processor: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ {$message_id}" );

		// –ó–∞–≥—Ä—É–∂–∞–µ–º attachments –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
		$attachment_ids = self::download_and_save_attachments( $message );

		// –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
		$comment_id = self::create_wp_comment_from_tg_message( $message, $attachment_ids );

		if ( $comment_id ) {
			// –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
			self::delete_processed_message( $message, $comment_id );
			delete_transient( $lock_key );

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é üëå –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ
			$telegram_message = json_decode( $message['telegram_message_json'], true );
			if ( isset( $telegram_message['message_id'] ) && isset( $telegram_message['chat']['id'] ) ) {
				WP_TGComment_Handler::send_reaction(
					$telegram_message['chat']['id'],
					$telegram_message['message_id'],
					'üëå'
				);
			}

			error_log( "WP TGComment Processor: –°–æ–æ–±—â–µ–Ω–∏–µ {$message_id} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, —Å–æ–∑–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id}" );

			return true;
		} else {
			// –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
			self::handle_processing_error( $message, $attachment_ids, '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è' );
			delete_transient( $lock_key );

			return false;
		}
	}

	/**
	 * –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram
	 * 
	 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç JSON —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ —Ç–∏–ø—ã –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ,
	 * –¥–æ–∫—É–º–µ–Ω—Ç—ã), –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Ö —á–µ—Ä–µ–∑ Telegram File API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
	 * –≤ –º–µ–¥–∏–∞–±–∏–±–ª–∏–æ—Ç–µ–∫—É WordPress.
	 * 
	 * @param array $message –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã incoming
	 * @return array –ú–∞—Å—Å–∏–≤ ID –≤–ª–æ–∂–µ–Ω–∏–π WordPress
	 */
	public static function download_and_save_attachments( $message ) {
		$telegram_message = json_decode( $message['telegram_message_json'], true );
		if ( ! $telegram_message || ! is_array( $telegram_message ) ) {
			error_log( "WP TGComment Processor: –°–æ–æ–±—â–µ–Ω–∏–µ {$message['id']} - –Ω–µ–≤–µ—Ä–Ω—ã–π JSON –∏–ª–∏ –Ω–µ –º–∞—Å—Å–∏–≤" );

			return [];
		}

		$attachment_ids = [];
		$token          = WP_TGComment::get_telegram_token();
		$post_id        = $message['post_id']; // –ü–æ–ª—É—á–∞–µ–º post_id –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–∏ —Ñ–∞–π–ª–æ–≤

		if ( empty( $token ) ) {
			error_log( 'WP TGComment Processor: Telegram bot token –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' );

			return [];
		}

		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
		$media_types = [
			'photo'      => 'photo',
			'video'      => 'video',
			'audio'      => 'audio',
			'voice'      => 'voice',
			'video_note' => 'video_note',
			'document'   => 'document'
		];

		foreach ( $media_types as $media_type => $field_name ) {
			if ( ! isset( $telegram_message[ $field_name ] ) ) {
				continue;
			}

			$media_data = $telegram_message[ $field_name ];

			// –î–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –±–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
			if ( $media_type === 'photo' && is_array( $media_data ) ) {
				$media_data = end( $media_data );
			}


			$attachment_id = self::download_telegram_file( $media_data, $token, $post_id );

			if ( is_wp_error( $attachment_id ) ) {
				$error_message = $attachment_id->get_error_message();
				error_log( "WP TGComment Processor: –°–æ–æ–±—â–µ–Ω–∏–µ {$message['id']} - –æ—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {$media_type}: " . $error_message );

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∫—Ä–µ—Å—Ç–∏–∫–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
				if ( isset( $telegram_message['message_id'] ) && isset( $telegram_message['chat']['id'] ) ) {
					WP_TGComment_Handler::send_reaction(
						$telegram_message['chat']['id'],
						$telegram_message['message_id'],
						'‚ùå'
					);
				}

				continue;
			}

			if ( $attachment_id ) {
				$attachment_ids[] = $attachment_id;
			}
		}

		return $attachment_ids;
	}

	/**
	 * –ó–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑ Telegram –≤ WordPress
	 * 
	 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —á–µ—Ä–µ–∑ getFile API, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª
	 * —á–µ—Ä–µ–∑ download_url –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –º–µ–¥–∏–∞–±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å –ø–æ–º–æ—â—å—é
	 * media_handle_sideload.
	 * 
	 * @param array  $attachment –î–∞–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –æ—Ç Telegram API
	 * @param string $token      –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
	 * @param int    $post_id    ID –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Ñ–∞–π–ª–∞
	 * @return int|WP_Error ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
	 */
	public static function download_telegram_file( $attachment, $token, $post_id = 0 ) {
		$file_id = $attachment['file_id'];

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
		$file_info_url      = "https://api.telegram.org/bot{$token}/getFile?file_id={$file_id}";
		$file_info_response = wp_remote_get( $file_info_url );

		// If error getting file info, return the error.
		if ( is_wp_error( $file_info_response ) ) {
			return $file_info_response;
		}

		$file_info_body = wp_remote_retrieve_body( $file_info_response );
		$file_info      = json_decode( $file_info_body, true );

		// If invalid API response, return error.
		if ( ! $file_info || ! $file_info['ok'] ) {
			return new WP_Error( 'telegram_api_error', '–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ' );
		}

		$file_path = $file_info['result']['file_path'];
		$file_url  = "https://api.telegram.org/file/bot{$token}/{$file_path}";

		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
		$filename = '';
		if ( isset( $attachment['file_name'] ) && $attachment['file_name'] ) {
			// –ï—Å—Ç—å –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			$filename = $attachment['file_name'];
		} else {
			// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞
			$extension = self::get_file_extension_by_mime( $attachment );
			$filename  = 'telegram_' . $file_id . '.' . $extension;
		}

		$file_array = [ 'name' => wp_basename( $filename ), 'tmp_name' => download_url( $file_url ) ];

		// If error storing temporarily, return the error.
		if ( is_wp_error( $file_array['tmp_name'] ) ) {
			return $file_array['tmp_name'];
		}

		// Do the validation and storage stuff with proper post_id
		$attachment_id = media_handle_sideload( $file_array, $post_id );

		// If error storing permanently, return error.
		@unlink( $file_array['tmp_name'] );

		return $attachment_id;
	}

	/**
	 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–æ MIME —Ç–∏–ø—É Telegram
	 * 
	 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –æ—Ç Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–µ
	 * —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ WordPress.
	 * 
	 * @param array $attachment –î–∞–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –æ—Ç Telegram API
	 * @return string –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (jpg, mp4, ogg, pdf –∏ —Ç.–¥.)
	 */
	public static function get_file_extension_by_mime( $attachment ) {
		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
		if ( isset( $attachment['mime_type'] ) ) {
			$mime_type   = $attachment['mime_type'];
			$mime_to_ext = [
				'audio/ogg'                                                               => 'ogg',
				'audio/mpeg'                                                              => 'mp3',
				'audio/mp4'                                                               => 'm4a',
				'video/mp4'                                                               => 'mp4',
				'video/webm'                                                              => 'webm',
				'image/jpeg'                                                              => 'jpg',
				'image/png'                                                               => 'png',
				'image/gif'                                                               => 'gif',
				'image/webp'                                                              => 'webp',
				'application/pdf'                                                         => 'pdf',
				'application/msword'                                                      => 'doc',
				'application/vnd.openxmlformats-officedocument.wordprocessingml.document' => 'docx'
			];

			if ( isset( $mime_to_ext[ $mime_type ] ) ) {
				return $mime_to_ext[ $mime_type ];
			}
		}

		// –î–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (—É –Ω–∏—Ö –Ω–µ—Ç mime_type –≤ JSON Telegram)
		if ( isset( $attachment['width'] ) && isset( $attachment['height'] ) && ! isset( $attachment['duration'] ) ) {
			return 'jpg'; // –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é JPEG
		}

		// –ï—Å–ª–∏ MIME —Ç–∏–ø –Ω–µ —É–∫–∞–∑–∞–Ω, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Ç–∏–ø—É attachment
		if ( isset( $attachment['duration'] ) ) {
			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ width/height - –µ—Å–ª–∏ –µ—Å—Ç—å, —ç—Ç–æ –≤–∏–¥–µ–æ
			$has_video_dimensions = false;

			// –£ video_note width/height –º–æ–≥—É—Ç –±—ã—Ç—å –≤ —Å–∞–º–æ–º –æ–±—ä–µ–∫—Ç–µ –∏–ª–∏ –≤ thumbnail
			if ( isset( $attachment['width'] ) && isset( $attachment['height'] ) ) {
				$has_video_dimensions = true;
			} elseif ( isset( $attachment['thumbnail']['width'] ) && isset( $attachment['thumbnail']['height'] ) ) {
				$has_video_dimensions = true;
			} elseif ( isset( $attachment['length'] ) ) {
				// video_note –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä length (—Ä–∞–∑–º–µ—Ä –∫—Ä—É–∂–∫–∞)
				$has_video_dimensions = true;
			}

			if ( $has_video_dimensions ) {
				// –í–∏–¥–µ–æ - –≤—Å–µ–≥–¥–∞ mp4 –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –±—Ä–∞—É–∑–µ—Ä–∞–º–∏
				return 'mp4';
			} else {
				// –ê—É–¥–∏–æ/–≥–æ–ª–æ—Å - –∏—Å–ø–æ–ª—å–∑—É–µ–º ogg —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∞—É–¥–∏–æ
				return 'ogg';
			}
		}

		// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
		return 'bin';
	}

	/**
	 * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è WordPress –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram
	 * 
	 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π WordPress.
	 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
	 * —Å –æ–¥–Ω–∏–º media_group_id –≤ –æ–¥–∏–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
	 * 
	 * @param array $dbmessage     –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	 * @param array $attachment_ids –ú–∞—Å—Å–∏–≤ ID –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π
	 * @return int|false ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏–ª–∏ false –ø—Ä–∏ –æ—à–∏–±–∫–µ
	 */
	public static function create_wp_comment_from_tg_message( $dbmessage, $attachment_ids = [] ) {
		$wp_user_id     = $dbmessage['wp_user_id'];
		$post_id        = $dbmessage['post_id'];
		$media_group_id = isset( $dbmessage['media_group_id'] ) ? $dbmessage['media_group_id'] : null;
		$chat_id        = $dbmessage['chat_id'];
		$tg_message_id  = $dbmessage['tg_message_id'];

		// –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ JSON —Å–æ–æ–±—â–µ–Ω–∏—è
		$telegram_message = json_decode( $dbmessage['telegram_message_json'], true );

		if ( isset( $telegram_message['text'] ) ) {
			$comment_content = $telegram_message['text'];
		} elseif ( isset( $telegram_message['caption'] ) ) {
			$comment_content = $telegram_message['caption'];
		}

		// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		$user = get_user_by( 'id', $wp_user_id );
		if ( ! $user ) {
			error_log( "WP TGComment Processor: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {$wp_user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω" );
			return false;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
		$post = get_post( $post_id );
		if ( ! $post ) {
			error_log( "WP TGComment Processor: –ü–æ—Å—Ç —Å ID {$post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω" );
			return false;
		}

		$comment_id = null;

		// –ï—Å–ª–∏ –µ—Å—Ç—å media_group_id, –∏—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ç–∞–∫–∏–º –∂–µ media_group_id —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 0
		if ( $media_group_id ) {
			$existing_comments = get_comments( [
				'post_id'    => $post_id,
				'user_id'    => $wp_user_id,
				'status'     => 'hold',
				'meta_query' => [
					[
						'key'     => 'media_group_id',
						'value'   => $media_group_id,
						'compare' => '='
					],
				],
				'number'     => 1,
			] );

			if ( ! empty( $existing_comments ) ) {
				// –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã - –¥–æ–±–∞–≤–ª—è–µ–º –∫ –Ω–µ–º—É –≤–ª–æ–∂–µ–Ω–∏—è
				$comment_id = $existing_comments[0]->comment_ID;
				error_log( "WP TGComment Processor: –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã {$comment_id} –¥–ª—è media_group_id {$media_group_id}" );

				// –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
				self::add_attachments_to_existing_comment( $comment_id, $attachment_ids );

				// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–∞–ø–æ–ª—è –¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				add_comment_meta( $comment_id, 'tg_incoming_message_id', $tg_message_id );
				add_comment_meta( $comment_id, 'tg_incoming_chat_id', $chat_id, true );

				// –ï—Å–ª–∏ –µ—Å—Ç—å caption –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
				if ( ! empty( $comment_content ) ) {
					wp_update_comment( [
						'comment_ID' => $comment_id,
						'comment_content' => $comment_content
					] );
					error_log( "WP TGComment Processor: –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è {$comment_id}: '{$comment_content}'" );
				}

				return $comment_id;
			}
		}

		// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
		$comment_data = [
			'comment_post_ID'      => $post_id,
			'comment_content'      => $comment_content,
			'comment_author'       => $user->display_name,
			'comment_author_email' => $user->user_email,
			'comment_author_url'   => '',
			'user_id'              => $wp_user_id,
			'comment_date'         => $dbmessage['created_at'],
			'comment_approved'     => 0,
			'comment_meta'         => [
				'tg_incoming_message_id' => $tg_message_id,
				'tg_incoming_chat_id'    => $chat_id
			]
		];

		// –î–æ–±–∞–≤–ª—è–µ–º media_group_id –µ—Å–ª–∏ –µ—Å—Ç—å
		if ( $media_group_id ) {
			$comment_data['comment_meta']['media_group_id'] = $media_group_id;
		}

		$comment_id = wp_insert_comment( $comment_data );
		if ( ! $comment_id ) {
			error_log( "WP TGComment Processor: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è" );
			return false;
		}

		error_log( "WP TGComment Processor: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º: '{$comment_content}' (—Å—Ç–∞—Ç—É—Å: unapproved)" );

		// –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è –∫ –Ω–æ–≤–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
		self::add_attachments_to_existing_comment( $comment_id, $attachment_ids );

		return $comment_id;
	}

	/**
	 * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
	 * 
	 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –Ω–æ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≤ –º–µ—Ç–∞–ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
	 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø –≥–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è
	 * –∫ –æ–¥–Ω–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é.
	 * 
	 * @param int   $comment_id         ID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è WordPress
	 * @param array $new_attachment_ids –ú–∞—Å—Å–∏–≤ –Ω–æ–≤—ã—Ö ID –≤–ª–æ–∂–µ–Ω–∏–π
	 * @return int ID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
	 */
	public static function add_attachments_to_existing_comment( $comment_id, $new_attachment_ids ) {
		if ( ! empty( $new_attachment_ids ) ) {
			// –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ attachment'—ã (–µ–¥–∏–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
			$existing_attachments = get_comment_meta( $comment_id, COMMENT_ATTACHMENTS_META_KEY, true );

			// –ï—Å–ª–∏ attachment_id –ø—É—Å—Ç–æ–µ –∏–ª–∏ –Ω–µ –º–∞—Å—Å–∏–≤, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
			if ( ! is_array( $existing_attachments ) ) {
				$existing_attachments = empty( $existing_attachments ) ? [] : [ $existing_attachments ];
			}

			// –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –Ω–æ–≤—ã–º–∏ ID
			$all_attachments = array_values( array_filter( array_merge( $existing_attachments, $new_attachment_ids ) ) );

			// –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º update –¥–ª—è –∑–∞–º–µ–Ω—ã –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
			update_comment_meta( $comment_id, COMMENT_ATTACHMENTS_META_KEY, $all_attachments );

			error_log( "WP TGComment Processor: –î–æ–±–∞–≤–ª–µ–Ω—ã attachment'—ã " . implode( ', ', $new_attachment_ids ) . " –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é {$comment_id}" );
			error_log( "WP TGComment Processor: –í—Å–µ–≥–æ attachment'–æ–≤ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ {$comment_id}: " . implode( ', ', $all_attachments ) );
		}

		return $comment_id;
	}

	/**
	 * –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏
	 * 
	 * –ü–æ–º–µ—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.
	 * –î–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≥—Ä—É–ø–ø—ã
	 * –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å—Ç–∞—Ç—É—Å "–æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π".
	 * 
	 * @param array $message    –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	 * @param int   $comment_id ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
	 * @return bool true –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, false –ø—Ä–∏ –æ—à–∏–±–∫–µ
	 */
	public static function delete_processed_message( $message, $comment_id ) {
		global $wpdb;
		$message_id     = $message['id'];
		$media_group_id = $message['media_group_id'];
		$table_name     = $wpdb->prefix . WP_TGComment_Handler::TABLE_INCOMING;

		if ( WP_TGCOMMENT_DEBUG ) {
			// –í —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–µ
			$result = $wpdb->update(
				$table_name,
				[ 'is_deleted' => 1 ],
				[ 'id' => $message_id ],
				[ '%d' ],
				[ '%d' ]
			);
			error_log( "WP TGComment Processor: –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–µ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è $comment_id —Å–æ–æ–±—â–µ–Ω–∏–µ {$message_id}" );
		} else {
			// –í –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
			$result = $wpdb->delete(
				$table_name,
				[ 'id' => $message_id ],
				[ '%d' ]
			);
			error_log( "WP TGComment Processor: —É–¥–∞–ª—è—é –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è $comment_id —Å–æ–æ–±—â–µ–Ω–∏–µ {$message_id}" );
		}
		if ( ! $comment_id ) {
			return false;
		}

		// –ï—Å–ª–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª media_group_id, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –µ—â–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–∞–∫–∏–º –∂–µ group_id
		if ( $media_group_id ) {
			$remaining_messages = $wpdb->get_var( $wpdb->prepare(
				"SELECT COUNT(*) FROM {$table_name} WHERE media_group_id = %s AND is_deleted = 0",
				$media_group_id
			) );

			error_log( "WP TGComment Processor: –î–ª—è media_group_id {$media_group_id} –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π: {$remaining_messages}" );

			// –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–∞–∫–∏–º media_group_id, –ø–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ approved
			if ( $remaining_messages == 0 ) {
				wp_set_comment_status( $comment_id, 'approve' );
				error_log( "WP TGComment Processor: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å APPROVED (–∑–∞–≤–µ—Ä—à–µ–Ω–∞ media group {$media_group_id})" );
			} else {
				error_log( "WP TGComment Processor: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id} –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ UNAPPROVED (media group {$media_group_id}, –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π: {$remaining_messages})" );
			}
		} else {
			wp_set_comment_status( $comment_id, 'approve' );
			error_log( "WP TGComment Processor: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å APPROVED (–æ–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)" );
		}

		return $result !== false;
	}


	/**
	 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
	 * 
	 * –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫. –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
	 * —Å–æ–∑–¥–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.
	 * –£–¥–∞–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.
	 * 
	 * @param array  $message        –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	 * @param array  $attachment_ids –ú–∞—Å—Å–∏–≤ ID –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π
	 * @param string $error_message  –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
	 * @return void
	 */
	public static function handle_processing_error( $message, $attachment_ids = [], $error_message = '' ) {
		global $wpdb;
		$message_id  = $message['id'];
		$table_name  = $wpdb->prefix . WP_TGComment_Handler::TABLE_INCOMING;
		$max_retries = WP_TGComment_Handler::MAX_RETRY_ATTEMPTS;

		// –£–¥–∞–ª—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ attachments –ø—Ä–∏ –æ—à–∏–±–∫–µ
		if ( ! empty( $attachment_ids ) ) {
			foreach ( $attachment_ids as $attachment_id ) {
				wp_delete_attachment( $attachment_id, true );
			}
		}

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
		$current_retry_count = $message['retry_count'];

		$new_retry_count = intval( $current_retry_count ) + 1;

		if ( $new_retry_count >= $max_retries ) {
			// –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ - —Å–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–µ–∑ attachments
			error_log( "WP TGComment Processor: –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {$message_id}, —Å–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–µ–∑ attachments" );

			$comment_id = self::create_wp_comment_from_tg_message( $message, [] );
			if ( $comment_id ) {
				self::delete_processed_message( $message, $comment_id );
				error_log( "WP TGComment Processor: –°–æ–æ–±—â–µ–Ω–∏–µ {$message_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–µ–∑ attachments, —Å–æ–∑–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {$comment_id}" );

				return;
			} else {
				self::delete_processed_message( $message, null );
				error_log( "WP TGComment Processor: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –±–µ–∑ attachments –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {$message_id}" );
			}

		}

		// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–µ—É–¥–∞—á
		$wpdb->update(
			$table_name,
			[
				'retry_count'             => $new_retry_count,
				'last_processing_attempt' => current_time( 'mysql' )
			],
			[ 'id' => $message_id ],
			[ '%d', '%s' ],
			[ '%d' ]
		);

		error_log( "WP TGComment Processor: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {$message_id} (–ø–æ–ø—ã—Ç–∫–∞ {$new_retry_count}/{$max_retries}): {$error_message}" );
	}
}
